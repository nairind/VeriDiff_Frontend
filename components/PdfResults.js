// components/PdfResults.js - Recreated from Screenshot
import { useState } from 'react';

const PdfResults = ({ results, file1Name, file2Name, options = {} }) => {
  console.log('üîç DEBUG - PdfResults received:', { results, file1Name, file2Name }); 
  const [viewMode, setViewMode] = useState('changes'); // 'changes' | 'sideBySide'
  const [showContext, setShowContext] = useState(true);
  const [changeFilter, setChangeFilter] = useState('all');
  const [isDownloading, setIsDownloading] = useState(false);
  const [downloadDropdownOpen, setDownloadDropdownOpen] = useState(false);

  // Extract data from your smart_changes format
  const smartChanges = results?.smart_changes || [];
  const similarity = results?.similarity || 86;
  const totalChanges = smartChanges.length;
  
  // Count different change types from smart_changes
  const changeTypeCounts = smartChanges.reduce((acc, change) => {
    const type = change.type || 'modified';
    acc[type] = (acc[type] || 0) + 1;
    return acc;
  }, {});

  // Get unique pages that have changes
  const pagesWithChanges = [...new Set(smartChanges.map(change => change.page))].length;
  const totalPages = Math.max(...smartChanges.map(change => change.page || 1), 2);

  // Download options
  const downloadOptions = [
    { id: 'html', label: 'üìÑ HTML Report', description: 'Web page with side-by-side view' },
    { id: 'csv', label: 'üìã CSV Data', description: 'Raw comparison data for analysis' },
    { id: 'text', label: 'üìù Text Report', description: 'Detailed text-based report' }
  ];

  // Simple download functions
  const generateHTMLReport = () => {
    return `<!DOCTYPE html>
<html><head><title>PDF Comparison Report</title></head>
<body>
<h1>PDF Comparison Report</h1>
<p>Similarity: ${similarity}%</p>
<p>Changes: ${totalChanges}</p>
<h2>Changes:</h2>
${smartChanges.map(change => `
<div>
  <strong>Page ${change.page}, ${change.type}:</strong><br>
  ${change.content || change.new_content || 'No content'}
</div>
`).join('')}
<p>Generated by VeriDiff</p>
</body></html>`;
  };

  const generateCSVData = () => {
    const headers = ['Page', 'Type', 'Content', 'Confidence'];
    const rows = [headers];
    smartChanges.forEach(change => {
      rows.push([
        change.page || '',
        change.type || 'modified',
        (change.content || change.new_content || '').replace(/"/g, '""'),
        change.alignment_confidence || ''
      ]);
    });
    return rows.map(row => row.map(cell => `"${cell}"`).join(',')).join('\n');
  };

  const generateTextReport = () => {
    return `PDF COMPARISON REPORT
=====================
Files: ${file1Name} vs ${file2Name}
Similarity: ${similarity}%
Total Changes: ${totalChanges}
Pages Modified: ${pagesWithChanges}

CHANGES:
${smartChanges.map((change, i) => `
${i + 1}. Page ${change.page} - ${change.type}
   ${change.content || change.new_content || 'No content'}
`).join('')}

Generated by VeriDiff`;
  };

  const downloadBlob = (blob, filename) => {
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = filename;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
  };

  const handleDownload = async (format) => {
    setIsDownloading(true);
    setDownloadDropdownOpen(false);
    
    try {
      const timestamp = new Date().toISOString().split('T')[0];
      
      switch (format) {
        case 'html':
          const htmlContent = generateHTMLReport();
          downloadBlob(new Blob([htmlContent], { type: 'text/html' }), `PDF_Report_${timestamp}.html`);
          break;
        case 'csv':
          const csvContent = generateCSVData();
          downloadBlob(new Blob([csvContent], { type: 'text/csv' }), `PDF_Data_${timestamp}.csv`);
          break;
        case 'text':
          const textContent = generateTextReport();
          downloadBlob(new Blob([textContent], { type: 'text/plain' }), `PDF_Report_${timestamp}.txt`);
          break;
      }
    } catch (error) {
      console.error('Download error:', error);
      alert('Download failed. Please try again.');
    } finally {
      setIsDownloading(false);
    }
  };

  const getChangeColor = (type) => {
    switch (type) {
      case 'added': return '#22c55e';
      case 'removed': return '#ef4444';
      case 'modified': return '#f59e0b';
      case 'insert': return '#22c55e';
      case 'delete': return '#ef4444';
      default: return '#f59e0b';
    }
  };

  const getChangeBackground = (type) => {
    switch (type) {
      case 'added': return '#dcfce7';
      case 'removed': return '#fee2e2';
      case 'modified': return '#fef3c7';
      case 'insert': return '#dcfce7';
      case 'delete': return '#fee2e2';
      default: return '#fef3c7';
    }
  };

  const filteredChanges = smartChanges.filter(change => {
    if (changeFilter === 'all') return true;
    return change.type === changeFilter;
  });

  return (
    <div style={{
      background: 'white',
      borderRadius: '16px',
      marginTop: '30px',
      boxShadow: '0 4px 20px rgba(0,0,0,0.08)',
      border: '1px solid #e5e7eb',
      overflow: 'hidden'
    }}>
      {/* Header - Blue Gradient like screenshot */}
      <div style={{
        background: 'linear-gradient(135deg, #3b82f6, #8b5cf6)',
        color: 'white',
        padding: '30px',
        display: 'flex',
        justifyContent: 'space-between',
        alignItems: 'center',
        flexWrap: 'wrap',
        gap: '20px'
      }}>
        <div>
          <h1 style={{
            fontSize: '2rem',
            fontWeight: '700',
            margin: '0 0 8px 0',
            display: 'flex',
            alignItems: 'center',
            gap: '10px'
          }}>
            üìë PDF Comparison Results
          </h1>
          <p style={{
            margin: 0,
            opacity: 0.9,
            fontSize: '1.1rem'
          }}>
            {file1Name} vs {file2Name}
          </p>
        </div>

        {/* Download Button with Dropdown */}
        <div style={{ position: 'relative' }}>
          <button
            onClick={() => setDownloadDropdownOpen(!downloadDropdownOpen)}
            disabled={isDownloading}
            style={{
              background: 'rgba(255, 255, 255, 0.2)',
              backdropFilter: 'blur(10px)',
              color: 'white',
              border: '1px solid rgba(255, 255, 255, 0.3)',
              padding: '12px 24px',
              borderRadius: '10px',
              fontSize: '1rem',
              fontWeight: '600',
              cursor: isDownloading ? 'not-allowed' : 'pointer',
              display: 'flex',
              alignItems: 'center',
              gap: '8px',
              opacity: isDownloading ? 0.7 : 1
            }}
          >
            {isDownloading ? '‚è≥ Generating...' : 'üì• Download Report'} ‚åÑ
          </button>

          {downloadDropdownOpen && (
            <div style={{
              position: 'absolute',
              top: '100%',
              right: 0,
              background: 'white',
              border: '1px solid #e5e7eb',
              borderRadius: '8px',
              boxShadow: '0 4px 20px rgba(0,0,0,0.15)',
              zIndex: 1000,
              minWidth: '280px',
              marginTop: '4px'
            }}>
              {downloadOptions.map(option => (
                <button
                  key={option.id}
                  onClick={() => handleDownload(option.id)}
                  style={{
                    width: '100%',
                    background: 'none',
                    border: 'none',
                    padding: '12px 16px',
                    textAlign: 'left',
                    cursor: 'pointer',
                    borderBottom: '1px solid #f3f4f6',
                    color: '#1f2937'
                  }}
                  onMouseEnter={(e) => e.target.style.background = '#f8fafc'}
                  onMouseLeave={(e) => e.target.style.background = 'none'}
                >
                  <div style={{ fontWeight: '500', marginBottom: '2px' }}>
                    {option.label}
                  </div>
                  <div style={{ fontSize: '0.85rem', color: '#6b7280' }}>
                    {option.description}
                  </div>
                </button>
              ))}
            </div>
          )}
        </div>
      </div>

      <div style={{ padding: '30px' }}>
        {/* Dashboard Cards - Exactly like screenshot */}
        <div style={{
          display: 'grid',
          gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))',
          gap: '20px',
          marginBottom: '30px'
        }}>
          {/* Similarity Score - Blue */}
          <div style={{
            background: 'linear-gradient(135deg, #dbeafe, #bfdbfe)',
            padding: '30px 20px',
            borderRadius: '12px',
            textAlign: 'center',
            border: '2px solid #3b82f6'
          }}>
            <div style={{
              fontSize: '3rem',
              fontWeight: '700',
              color: '#1d4ed8',
              marginBottom: '8px'
            }}>
              {similarity}%
            </div>
            <div style={{
              fontSize: '1.1rem',
              color: '#1e40af',
              fontWeight: '600'
            }}>
              Similarity Score
            </div>
          </div>

          {/* Changes Found - Orange */}
          <div style={{
            background: 'linear-gradient(135deg, #fed7aa, #fdba74)',
            padding: '30px 20px',
            borderRadius: '12px',
            textAlign: 'center',
            border: '2px solid #f97316'
          }}>
            <div style={{
              fontSize: '3rem',
              fontWeight: '700',
              color: '#c2410c',
              marginBottom: '8px'
            }}>
              {totalChanges}
            </div>
            <div style={{
              fontSize: '1.1rem',
              color: '#ea580c',
              fontWeight: '600'
            }}>
              Changes Found
            </div>
          </div>

          {/* Pages Modified - Green */}
          <div style={{
            background: 'linear-gradient(135deg, #bbf7d0, #86efac)',
            padding: '30px 20px',
            borderRadius: '12px',
            textAlign: 'center',
            border: '2px solid #22c55e'
          }}>
            <div style={{
              fontSize: '3rem',
              fontWeight: '700',
              color: '#15803d',
              marginBottom: '8px'
            }}>
              {pagesWithChanges}
            </div>
            <div style={{
              fontSize: '1.1rem',
              color: '#166534',
              fontWeight: '600'
            }}>
              Pages Modified
            </div>
          </div>

          {/* Total Pages - Purple */}
          <div style={{
            background: 'linear-gradient(135deg, #e9d5ff, #d8b4fe)',
            padding: '30px 20px',
            borderRadius: '12px',
            textAlign: 'center',
            border: '2px solid #a855f7'
          }}>
            <div style={{
              fontSize: '3rem',
              fontWeight: '700',
              color: '#7c3aed',
              marginBottom: '8px'
            }}>
              {totalPages}
            </div>
            <div style={{
              fontSize: '1.1rem',
              color: '#6d28d9',
              fontWeight: '600'
            }}>
              Total Pages
            </div>
          </div>
        </div>

        {/* View Toggle - Like screenshot */}
        <div style={{
          display: 'flex',
          alignItems: 'center',
          gap: '20px',
          marginBottom: '30px'
        }}>
          <div style={{
            display: 'flex',
            background: '#f3f4f6',
            borderRadius: '10px',
            padding: '4px',
            border: '1px solid #e5e7eb'
          }}>
            <button
              onClick={() => setViewMode('changes')}
              style={{
                background: viewMode === 'changes' ? 'white' : 'transparent',
                border: 'none',
                padding: '12px 20px',
                borderRadius: '8px',
                fontSize: '1rem',
                fontWeight: '600',
                cursor: 'pointer',
                color: viewMode === 'changes' ? '#2563eb' : '#6b7280',
                boxShadow: viewMode === 'changes' ? '0 2px 4px rgba(0,0,0,0.1)' : 'none',
                transition: 'all 0.2s ease',
                display: 'flex',
                alignItems: 'center',
                gap: '8px'
              }}
            >
              üìã Changes List
            </button>
            <button
              onClick={() => setViewMode('sideBySide')}
              style={{
                background: viewMode === 'sideBySide' ? 'white' : 'transparent',
                border: 'none',
                padding: '12px 20px',
                borderRadius: '8px',
                fontSize: '1rem',
                fontWeight: '600',
                cursor: 'pointer',
                color: viewMode === 'sideBySide' ? '#2563eb' : '#6b7280',
                boxShadow: viewMode === 'sideBySide' ? '0 2px 4px rgba(0,0,0,0.1)' : 'none',
                transition: 'all 0.2s ease',
                display: 'flex',
                alignItems: 'center',
                gap: '8px'
              }}
            >
              üìÑ Side-by-Side
            </button>
          </div>
        </div>

        {/* Content Based on View Mode */}
        {viewMode === 'changes' ? (
          // Changes List View - Like screenshot
          <div>
            {/* Controls */}
            <div style={{
              display: 'flex',
              alignItems: 'center',
              justifyContent: 'space-between',
              marginBottom: '25px',
              flexWrap: 'wrap',
              gap: '15px'
            }}>
              <h3 style={{
                fontSize: '1.3rem',
                fontWeight: '600',
                color: '#1f2937',
                margin: 0,
                display: 'flex',
                alignItems: 'center',
                gap: '8px'
              }}>
                üìã Changes Found ({filteredChanges.length})
              </h3>
              
              <div style={{ display: 'flex', alignItems: 'center', gap: '20px' }}>
                <label style={{
                  display: 'flex',
                  alignItems: 'center',
                  gap: '8px',
                  fontSize: '0.9rem',
                  color: '#374151',
                  cursor: 'pointer'
                }}>
                  <input
                    type="checkbox"
                    checked={showContext}
                    onChange={(e) => setShowContext(e.target.checked)}
                    style={{ width: '16px', height: '16px' }}
                  />
                  Show context
                </label>
                
                <select
                  value={changeFilter}
                  onChange={(e) => setChangeFilter(e.target.value)}
                  style={{
                    padding: '8px 12px',
                    border: '1px solid #d1d5db',
                    borderRadius: '6px',
                    fontSize: '0.9rem',
                    background: 'white'
                  }}
                >
                  <option value="all">All changes</option>
                  <option value="added">Added only</option>
                  <option value="removed">Removed only</option>
                  <option value="modified">Modified only</option>
                  <option value="insert">Insert only</option>
                  <option value="delete">Delete only</option>
                </select>
              </div>
            </div>

            {/* Changes List */}
            <div>
              {filteredChanges.length === 0 ? (
                <div style={{
                  textAlign: 'center',
                  padding: '60px 20px',
                  background: '#f0fdf4',
                  borderRadius: '12px',
                  border: '2px solid #22c55e'
                }}>
                  <div style={{ fontSize: '4rem', marginBottom: '15px' }}>üéâ</div>
                  <div style={{
                    fontSize: '1.5rem',
                    fontWeight: '600',
                    color: '#166534',
                    marginBottom: '8px'
                  }}>
                    No changes found!
                  </div>
                  <div style={{ fontSize: '1rem', color: '#15803d' }}>
                    The documents appear to be identical.
                  </div>
                </div>
              ) : (
                filteredChanges.map((change, index) => (
                  <div
                    key={index}
                    style={{
                      background: getChangeBackground(change.type),
                      border: `2px solid ${getChangeColor(change.type)}`,
                      borderRadius: '12px',
                      padding: '20px',
                      marginBottom: '16px'
                    }}
                  >
                    {/* Change Header */}
                    <div style={{
                      display: 'flex',
                      alignItems: 'center',
                      gap: '12px',
                      marginBottom: '15px',
                      flexWrap: 'wrap'
                    }}>
                      <span style={{
                        background: getChangeColor(change.type),
                        color: 'white',
                        padding: '6px 12px',
                        borderRadius: '6px',
                        fontSize: '0.85rem',
                        fontWeight: '600',
                        textTransform: 'uppercase'
                      }}>
                        {change.type}
                      </span>
                      <span style={{
                        fontWeight: '600',
                        color: '#1f2937',
                        fontSize: '1rem'
                      }}>
                        Page {change.page}
                      </span>
                      {change.alignment_confidence && (
                        <span style={{
                          background: 'rgba(0,0,0,0.1)',
                          padding: '4px 8px',
                          borderRadius: '4px',
                          fontSize: '0.8rem',
                          color: '#4b5563'
                        }}>
                          {(change.alignment_confidence * 100).toFixed(0)}% confidence
                        </span>
                      )}
                    </div>

                    {/* Change Content */}
                    <div style={{
                      fontSize: '0.95rem',
                      lineHeight: '1.6',
                      color: '#1f2937'
                    }}>
                      <div style={{
                        background: 'rgba(255,255,255,0.7)',
                        padding: '12px',
                        borderRadius: '6px',
                        fontFamily: 'monospace',
                        fontSize: '0.9rem'
                      }}>
                        "{change.content || change.new_content || 'No content available'}"
                      </div>
                      
                      {showContext && change.old_content && change.type === 'modified' && (
                        <div style={{
                          marginTop: '10px',
                          fontSize: '0.85rem',
                          color: '#6b7280',
                          fontStyle: 'italic'
                        }}>
                          <strong>Previous:</strong> "{change.old_content}"
                        </div>
                      )}
                    </div>
                  </div>
                ))
              )}
            </div>
          </div>
        ) : (
          // Side-by-Side View
          <div>
            <div style={{
              display: 'grid',
              gridTemplateColumns: '1fr 1fr',
              gap: '20px',
              height: '500px'
            }}>
              {/* Left Document */}
              <div style={{
                border: '2px solid #e5e7eb',
                borderRadius: '12px',
                overflow: 'hidden',
                background: 'white',
                boxShadow: '0 4px 6px rgba(0, 0, 0, 0.05)'
              }}>
                <div style={{
                  background: '#f8fafc',
                  padding: '15px 20px',
                  fontWeight: '600',
                  color: '#1f2937',
                  borderBottom: '1px solid #e5e7eb',
                  fontSize: '1.1rem'
                }}>
                  üìÑ {file1Name || 'Document 1'}
                </div>
                <div style={{
                  height: '440px',
                  overflowY: 'auto',
                  padding: '20px'
                }}>
                  {smartChanges.map((change, index) => (
                    <div
                      key={`left-${index}`}
                      style={{
                        marginBottom: '15px',
                        padding: '12px',
                        borderRadius: '6px',
                        ...((change.type === 'removed' || change.type === 'delete') ? {
                          background: '#fee2e2',
                          border: '1px solid #fca5a5',
                          color: '#7f1d1d'
                        } : {
                          background: '#f9fafb',
                          border: '1px solid #e5e7eb',
                          color: '#374151'
                        })
                      }}
                    >
                      <div style={{ fontSize: '0.8rem', color: '#6b7280', marginBottom: '5px' }}>
                        Page {change.page} ‚Ä¢ {change.type}
                      </div>
                      <div style={{ fontSize: '0.9rem', lineHeight: '1.5' }}>
                        {change.old_content || change.content || 'No content'}
                      </div>
                    </div>
                  ))}
                </div>
              </div>

              {/* Right Document */}
              <div style={{
                border: '2px solid #e5e7eb',
                borderRadius: '12px',
                overflow: 'hidden',
                background: 'white',
                boxShadow: '0 4px 6px rgba(0, 0, 0, 0.05)'
              }}>
                <div style={{
                  background: '#f8fafc',
                  padding: '15px 20px',
                  fontWeight: '600',
                  color: '#1f2937',
                  borderBottom: '1px solid #e5e7eb',
                  fontSize: '1.1rem'
                }}>
                  üìÑ {file2Name || 'Document 2'}
                </div>
                <div style={{
                  height: '440px',
                  overflowY: 'auto',
                  padding: '20px'
                }}>
                  {smartChanges.map((change, index) => (
                    <div
                      key={`right-${index}`}
                      style={{
                        marginBottom: '15px',
                        padding: '12px',
                        borderRadius: '6px',
                        ...((change.type === 'added' || change.type === 'insert') ? {
                          background: '#dcfce7',
                          border: '1px solid #a7f3d0',
                          color: '#14532d'
                        } : {
                          background: '#f9fafb',
                          border: '1px solid #e5e7eb',
                          color: '#374151'
                        })
                      }}
                    >
                      <div style={{ fontSize: '0.8rem', color: '#6b7280', marginBottom: '5px' }}>
                        Page {change.page} ‚Ä¢ {change.type}
                      </div>
                      <div style={{ fontSize: '0.9rem', lineHeight: '1.5' }}>
                        {change.new_content || change.content || 'No content'}
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            </div>

            {/* Legend */}
            <div style={{
              display: 'flex',
              justifyContent: 'center',
              gap: '25px',
              marginTop: '20px',
              fontSize: '0.9rem'
            }}>
              <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>
                <div style={{
                  width: '16px',
                  height: '16px',
                  background: '#dcfce7',
                  border: '1px solid #a7f3d0',
                  borderRadius: '3px'
                }}></div>
                <span>Added</span>
              </div>
              <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>
                <div style={{
                  width: '16px',
                  height: '16px',
                  background: '#fee2e2',
                  border: '1px solid #fca5a5',
                  borderRadius: '3px'
                }}></div>
                <span>Removed</span>
              </div>
              <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>
                <div style={{
                  width: '16px',
                  height: '16px',
                  background: '#fef3c7',
                  border: '1px solid #fcd34d',
                  borderRadius: '3px'
                }}></div>
                <span>Modified</span>
              </div>
            </div>
          </div>
        )}

        {/* Footer */}
        <div style={{
          marginTop: '30px',
          paddingTop: '20px',
          borderTop: '1px solid #e5e7eb',
          fontSize: '0.9rem',
          color: '#6b7280',
          textAlign: 'center'
        }}>
          ‚ö° Processed {totalChanges} changes across {totalPages} pages ‚Ä¢ 
          üöÄ <strong>Powered by VeriDiff</strong>
        </div>
      </div>
    </div>
  );
};

export default PdfResults;
